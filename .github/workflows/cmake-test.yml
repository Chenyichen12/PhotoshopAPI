name: Test

on:
  workflow_dispatch:
  push:
    branches:
     - dev
  pull_request:
    branches:
     - master
  release:
    types:
      - published

env:
  BUILD_TYPE: Release

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        include:
           - name: Ubuntu GCC
             os: ubuntu-latest
             compiler: gcc-13
             compilercxx: g++-13
           - name: Windows MSVC
             os: windows-latest
             compiler: msvc
             compilercxx: msvc
           - name: MacOS Intel GCC
             os: macos-latest
             compiler: gcc-13
             compilercxx: g++-13
           - name: MacOS ARM GCC
             os: macos-14
             compiler: gcc-13
             compilercxx: g++-13

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    # We need to specify Xcode15.1 here as the default for macos-14 runners is 15.01 which has a bug 
    # causing linking to fail.
    - name: Setup Xcode 15.1
      if: matrix.os == 'macos-14'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.1'

    - name: Configure CMake ${{ matrix.os }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPSAPI_BUILD_DOCS=OFF -DPSAPI_BUILD_BENCHMARKS=OFF -DPSAPI_BUILD_EXAMPLES=OFF -DPSAPI_BUILD_PYTHON=OFF

    - name: Build ${{ matrix.os }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test ${{ matrix.os }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
      working-directory: ${{github.workspace}}/build/PhotoshopTest
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
        